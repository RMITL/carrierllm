{
  "version": 3,
  "sources": ["../../../src/clerk-email-notifications.ts", "../../../src/comprehensive-worker.ts", "../../../../../../../../Users/cinef/AppData/Local/npm-cache/_npx/d77349f55c2be1c0/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../../../Users/cinef/AppData/Local/npm-cache/_npx/d77349f55c2be1c0/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-sMlhmP/middleware-insertion-facade.js", "../../../../../../../../Users/cinef/AppData/Local/npm-cache/_npx/d77349f55c2be1c0/node_modules/wrangler/templates/middleware/common.ts", "../bundle-sMlhmP/middleware-loader.entry.ts"],
  "sourceRoot": "C:\\sites\\carrierllm\\carrierllm\\apps\\worker\\.wrangler\\tmp\\dev-U5k67F",
  "sourcesContent": ["/**\r\n * Clerk webhook email notifications\r\n * Handles sending rich email notifications for Clerk events\r\n */\r\n\r\ninterface EmailEnv {\r\n  RESEND_API_KEY?: string;\r\n  FROM_EMAIL?: string;\r\n  ADMIN_EMAIL?: string;\r\n  APP_URL?: string;\r\n}\r\n\r\n/**\r\n * Send organization welcome email to admin\r\n */\r\nexport async function sendOrganizationWelcomeEmail(\r\n  org: any,\r\n  env: EmailEnv\r\n): Promise<boolean> {\r\n  if (!env.RESEND_API_KEY) return false;\r\n\r\n  try {\r\n    const response = await fetch('https://api.resend.com/emails', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${env.RESEND_API_KEY}`\r\n      },\r\n      body: JSON.stringify({\r\n        from: env.FROM_EMAIL || 'noreply@mail.carrierllm.com',\r\n        to: 'admin@carrierllm.com', // You'd get this from the org admin\r\n        subject: `\uD83C\uDF89 Welcome to CarrierLLM! Your organization \"${org.name}\" is ready`,\r\n        html: `\r\n          <div style=\"font-family: system-ui, -apple-system, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n            <h1 style=\"color: #3b82f6; font-size: 28px; margin-bottom: 20px;\">Welcome to CarrierLLM!</h1>\r\n            \r\n            <p style=\"color: #4b5563; font-size: 16px; line-height: 1.6;\">\r\n              Congratulations! Your organization <strong>${org.name}</strong> has been successfully created and is ready to use.\r\n            </p>\r\n\r\n            <div style=\"background: #eff6ff; padding: 24px; border-radius: 12px; margin: 24px 0;\">\r\n              <h3 style=\"color: #1e40af; margin-top: 0;\">\uD83D\uDE80 What's Next?</h3>\r\n              <ul style=\"color: #4b5563; line-height: 1.8;\">\r\n                <li>Invite your team members to collaborate</li>\r\n                <li>Upload your carrier underwriting documents</li>\r\n                <li>Configure carrier preferences for your organization</li>\r\n                <li>Start getting intelligent carrier recommendations</li>\r\n              </ul>\r\n            </div>\r\n\r\n            <div style=\"text-align: center; margin: 32px 0;\">\r\n              <a href=\"${env.APP_URL}/carriers\" \r\n                 style=\"background: #3b82f6; color: white; padding: 12px 24px; border-radius: 8px; text-decoration: none; font-weight: 600;\">\r\n                Get Started \u2192\r\n              </a>\r\n            </div>\r\n\r\n            <div style=\"background: #f9fafb; padding: 20px; border-radius: 8px; margin: 24px 0;\">\r\n              <h4 style=\"color: #1a1a1a; margin-top: 0;\">Organization Details:</h4>\r\n              <p style=\"color: #4b5563; margin: 4px 0;\"><strong>Name:</strong> ${org.name}</p>\r\n              <p style=\"color: #4b5563; margin: 4px 0;\"><strong>Created:</strong> ${new Date(org.created_at).toLocaleDateString()}</p>\r\n              <p style=\"color: #4b5563; margin: 4px 0;\"><strong>Member Limit:</strong> ${org.max_allowed_memberships}</p>\r\n            </div>\r\n\r\n            <p style=\"color: #6b7280; font-size: 14px; margin-top: 32px;\">\r\n              Need help? Contact our support team at <a href=\"mailto:info@carrierllm.com\" style=\"color: #3b82f6;\">info@carrierllm.com</a>\r\n            </p>\r\n          </div>\r\n        `\r\n      })\r\n    });\r\n\r\n    return response.ok;\r\n  } catch (error) {\r\n    console.error('Failed to send organization welcome email:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Send team welcome email to new member\r\n */\r\nexport async function sendTeamWelcomeEmail(\r\n  membership: any,\r\n  env: EmailEnv\r\n): Promise<boolean> {\r\n  if (!env.RESEND_API_KEY || !membership.public_user_data?.user_id) return false;\r\n\r\n  try {\r\n    // Get user email from membership data or fetch from Clerk API\r\n    const userEmail = membership.public_user_data?.identifier || 'team@carrierllm.com';\r\n\r\n    const response = await fetch('https://api.resend.com/emails', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${env.RESEND_API_KEY}`\r\n      },\r\n      body: JSON.stringify({\r\n        from: env.FROM_EMAIL || 'noreply@mail.carrierllm.com',\r\n        to: userEmail,\r\n        subject: `\uD83D\uDC4B Welcome to ${membership.organization.name} on CarrierLLM!`,\r\n        html: `\r\n          <div style=\"font-family: system-ui, -apple-system, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n            <h1 style=\"color: #3b82f6; font-size: 28px; margin-bottom: 20px;\">Welcome to the team!</h1>\r\n            \r\n            <p style=\"color: #4b5563; font-size: 16px; line-height: 1.6;\">\r\n              Hi ${membership.public_user_data?.first_name || 'there'},<br><br>\r\n              You've been added to <strong>${membership.organization.name}</strong> on CarrierLLM! \r\n              You now have access to our intelligent carrier recommendation platform.\r\n            </p>\r\n\r\n            <div style=\"background: #eff6ff; padding: 24px; border-radius: 12px; margin: 24px 0;\">\r\n              <h3 style=\"color: #1e40af; margin-top: 0;\">\uD83C\uDFAF Your Role: ${membership.role_name}</h3>\r\n              <p style=\"color: #4b5563; line-height: 1.6;\">\r\n                As a ${membership.role_name.toLowerCase()}, you can:\r\n                ${membership.permissions?.map((perm: string) => `<li style=\"margin: 8px 0;\">${formatPermission(perm)}</li>`).join('')}\r\n              </p>\r\n            </div>\r\n\r\n            <div style=\"text-align: center; margin: 32px 0;\">\r\n              <a href=\"${env.APP_URL}/dashboard\" \r\n                 style=\"background: #3b82f6; color: white; padding: 12px 24px; border-radius: 8px; text-decoration: none; font-weight: 600;\">\r\n                Access Dashboard \u2192\r\n              </a>\r\n            </div>\r\n\r\n            <div style=\"background: #f9fafb; padding: 20px; border-radius: 8px; margin: 24px 0;\">\r\n              <h4 style=\"color: #1a1a1a; margin-top: 0;\">Quick Start Guide:</h4>\r\n              <ol style=\"color: #4b5563; line-height: 1.8;\">\r\n                <li>Review your organization's carrier preferences</li>\r\n                <li>Submit your first intake form to get recommendations</li>\r\n                <li>Explore the analytics dashboard</li>\r\n                <li>Upload additional carrier documents if needed</li>\r\n              </ol>\r\n            </div>\r\n\r\n            <p style=\"color: #6b7280; font-size: 14px; margin-top: 32px;\">\r\n              Questions? Reach out to your team admin or contact us at <a href=\"mailto:info@carrierllm.com\" style=\"color: #3b82f6;\">info@carrierllm.com</a>\r\n            </p>\r\n          </div>\r\n        `\r\n      })\r\n    });\r\n\r\n    return response.ok;\r\n  } catch (error) {\r\n    console.error('Failed to send team welcome email:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Send organization invitation email\r\n */\r\nexport async function sendOrganizationInvitationEmail(\r\n  invitation: any,\r\n  env: EmailEnv\r\n): Promise<boolean> {\r\n  if (!env.RESEND_API_KEY) return false;\r\n\r\n  try {\r\n    const response = await fetch('https://api.resend.com/emails', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${env.RESEND_API_KEY}`\r\n      },\r\n      body: JSON.stringify({\r\n        from: env.FROM_EMAIL || 'noreply@mail.carrierllm.com',\r\n        to: invitation.email_address,\r\n        subject: `\uD83C\uDFAF You're invited to join ${invitation.organization?.name || 'a team'} on CarrierLLM`,\r\n        html: `\r\n          <div style=\"font-family: system-ui, -apple-system, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n            <h1 style=\"color: #3b82f6; font-size: 28px; margin-bottom: 20px;\">You're Invited!</h1>\r\n            \r\n            <p style=\"color: #4b5563; font-size: 16px; line-height: 1.6;\">\r\n              You've been invited to join <strong>${invitation.organization?.name || 'a team'}</strong> on CarrierLLM, \r\n              the intelligent carrier recommendation platform for insurance professionals.\r\n            </p>\r\n\r\n            <div style=\"background: #eff6ff; padding: 24px; border-radius: 12px; margin: 24px 0;\">\r\n              <h3 style=\"color: #1e40af; margin-top: 0;\">\uD83C\uDFAF Your Role: ${invitation.role_name}</h3>\r\n              <p style=\"color: #4b5563; line-height: 1.6;\">\r\n                You'll have access to:\r\n              </p>\r\n              <ul style=\"color: #4b5563; line-height: 1.8;\">\r\n                <li>Intelligent carrier matching and recommendations</li>\r\n                <li>Team collaboration and shared carrier preferences</li>\r\n                <li>Analytics and reporting dashboard</li>\r\n                <li>Document management and upload capabilities</li>\r\n              </ul>\r\n            </div>\r\n\r\n            <div style=\"text-align: center; margin: 32px 0;\">\r\n              <a href=\"${invitation.url}\" \r\n                 style=\"background: #3b82f6; color: white; padding: 12px 24px; border-radius: 8px; text-decoration: none; font-weight: 600;\">\r\n                Accept Invitation \u2192\r\n              </a>\r\n            </div>\r\n\r\n            <div style=\"background: #fef3c7; padding: 20px; border-radius: 8px; margin: 24px 0; border-left: 4px solid #f59e0b;\">\r\n              <p style=\"color: #92400e; margin: 0; font-weight: 600;\">\r\n                \u23F0 This invitation expires on ${new Date(invitation.expires_at).toLocaleDateString()}\r\n              </p>\r\n            </div>\r\n\r\n            <p style=\"color: #6b7280; font-size: 14px; margin-top: 32px;\">\r\n              Questions about this invitation? Contact us at <a href=\"mailto:info@carrierllm.com\" style=\"color: #3b82f6;\">info@carrierllm.com</a>\r\n            </p>\r\n          </div>\r\n        `\r\n      })\r\n    });\r\n\r\n    return response.ok;\r\n  } catch (error) {\r\n    console.error('Failed to send invitation email:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Send trial ending notification email\r\n */\r\nexport async function sendTrialEndingEmail(\r\n  item: any,\r\n  env: EmailEnv\r\n): Promise<boolean> {\r\n  if (!env.RESEND_API_KEY || !item.payer?.user_id) return false;\r\n\r\n  try {\r\n    const response = await fetch('https://api.resend.com/emails', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${env.RESEND_API_KEY}`\r\n      },\r\n      body: JSON.stringify({\r\n        from: env.FROM_EMAIL || 'noreply@mail.carrierllm.com',\r\n        to: item.payer.email,\r\n        subject: `\u23F0 Your CarrierLLM trial is ending soon`,\r\n        html: `\r\n          <div style=\"font-family: system-ui, -apple-system, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n            <h1 style=\"color: #f59e0b; font-size: 28px; margin-bottom: 20px;\">Trial Ending Soon</h1>\r\n            \r\n            <p style=\"color: #4b5563; font-size: 16px; line-height: 1.6;\">\r\n              Hi ${item.payer.first_name || 'there'},<br><br>\r\n              Your free trial for <strong>${item.plan.name}</strong> is ending soon. \r\n              Don't lose access to your carrier recommendations and team collaboration features!\r\n            </p>\r\n\r\n            <div style=\"background: #fef3c7; padding: 24px; border-radius: 12px; margin: 24px 0; border-left: 4px solid #f59e0b;\">\r\n              <h3 style=\"color: #92400e; margin-top: 0;\">\u23F0 Trial Details</h3>\r\n              <p style=\"color: #92400e; margin: 4px 0;\"><strong>Plan:</strong> ${item.plan.name}</p>\r\n              <p style=\"color: #92400e; margin: 4px 0;\"><strong>Price:</strong> ${formatPrice(item.plan.amount, item.plan.currency)}</p>\r\n              <p style=\"color: #92400e; margin: 4px 0;\"><strong>Billing:</strong> ${item.interval}</p>\r\n            </div>\r\n\r\n            <div style=\"text-align: center; margin: 32px 0;\">\r\n              <a href=\"${env.APP_URL}/billing\" \r\n                 style=\"background: #3b82f6; color: white; padding: 12px 24px; border-radius: 8px; text-decoration: none; font-weight: 600;\">\r\n                Continue Subscription \u2192\r\n              </a>\r\n            </div>\r\n\r\n            <div style=\"background: #eff6ff; padding: 20px; border-radius: 8px; margin: 24px 0;\">\r\n              <h4 style=\"color: #1a1a1a; margin-top: 0;\">What happens if you don't upgrade?</h4>\r\n              <ul style=\"color: #4b5563; line-height: 1.8;\">\r\n                <li>Access to premium carrier recommendations will be limited</li>\r\n                <li>Team collaboration features will be disabled</li>\r\n                <li>Advanced analytics will no longer be available</li>\r\n                <li>Your data will be preserved for 30 days</li>\r\n              </ul>\r\n            </div>\r\n\r\n            <p style=\"color: #6b7280; font-size: 14px; margin-top: 32px;\">\r\n              Questions about billing? Contact us at <a href=\"mailto:info@carrierllm.com\" style=\"color: #3b82f6;\">info@carrierllm.com</a>\r\n            </p>\r\n          </div>\r\n        `\r\n      })\r\n    });\r\n\r\n    return response.ok;\r\n  } catch (error) {\r\n    console.error('Failed to send trial ending email:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Send payment confirmation email\r\n */\r\nexport async function sendPaymentConfirmationEmail(\r\n  payment: any,\r\n  env: EmailEnv\r\n): Promise<boolean> {\r\n  if (!env.RESEND_API_KEY || !payment.payer?.user_id) return false;\r\n\r\n  try {\r\n    const response = await fetch('https://api.resend.com/emails', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${env.RESEND_API_KEY}`\r\n      },\r\n      body: JSON.stringify({\r\n        from: env.FROM_EMAIL || 'noreply@mail.carrierllm.com',\r\n        to: payment.payer.email,\r\n        subject: `\u2705 Payment Confirmed - CarrierLLM`,\r\n        html: `\r\n          <div style=\"font-family: system-ui, -apple-system, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n            <h1 style=\"color: #10b981; font-size: 28px; margin-bottom: 20px;\">Payment Confirmed!</h1>\r\n            \r\n            <p style=\"color: #4b5563; font-size: 16px; line-height: 1.6;\">\r\n              Hi ${payment.payer.first_name || 'there'},<br><br>\r\n              Thank you! Your payment has been successfully processed and your CarrierLLM subscription is now active.\r\n            </p>\r\n\r\n            <div style=\"background: #f0fdf4; padding: 24px; border-radius: 12px; margin: 24px 0; border-left: 4px solid #10b981;\">\r\n              <h3 style=\"color: #166534; margin-top: 0;\">\uD83D\uDCB0 Payment Details</h3>\r\n              <p style=\"color: #166534; margin: 4px 0;\"><strong>Amount:</strong> ${payment.totals.grand_total.amount_formatted}</p>\r\n              <p style=\"color: #166534; margin: 4px 0;\"><strong>Date:</strong> ${new Date(payment.created_at).toLocaleDateString()}</p>\r\n              <p style=\"color: #166534; margin: 4px 0;\"><strong>Status:</strong> ${payment.status}</p>\r\n            </div>\r\n\r\n            <div style=\"background: #eff6ff; padding: 20px; border-radius: 8px; margin: 24px 0;\">\r\n              <h4 style=\"color: #1a1a1a; margin-top: 0;\">\uD83C\uDF89 You now have access to:</h4>\r\n              <ul style=\"color: #4b5563; line-height: 1.8;\">\r\n                <li>Unlimited carrier recommendations</li>\r\n                <li>Advanced analytics and reporting</li>\r\n                <li>Team collaboration features</li>\r\n                <li>Priority support</li>\r\n                <li>Document upload and management</li>\r\n              </ul>\r\n            </div>\r\n\r\n            <div style=\"text-align: center; margin: 32px 0;\">\r\n              <a href=\"${env.APP_URL}/dashboard\" \r\n                 style=\"background: #3b82f6; color: white; padding: 12px 24px; border-radius: 8px; text-decoration: none; font-weight: 600;\">\r\n                Access Dashboard \u2192\r\n              </a>\r\n            </div>\r\n\r\n            <p style=\"color: #6b7280; font-size: 14px; margin-top: 32px;\">\r\n              Need help? Contact our support team at <a href=\"mailto:info@carrierllm.com\" style=\"color: #3b82f6;\">info@carrierllm.com</a>\r\n            </p>\r\n          </div>\r\n        `\r\n      })\r\n    });\r\n\r\n    return response.ok;\r\n  } catch (error) {\r\n    console.error('Failed to send payment confirmation email:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// Helper functions\r\nfunction formatPermission(permission: string): string {\r\n  return permission\r\n    .replace(/org:/g, '')\r\n    .replace(/:/g, ' ')\r\n    .split(' ')\r\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n    .join(' ');\r\n}\r\n\r\n/**\r\n * Send user welcome email\r\n */\r\nexport async function sendUserWelcomeEmail(\r\n  user: any,\r\n  env: EmailEnv\r\n): Promise<boolean> {\r\n  if (!env.RESEND_API_KEY || !user.email_addresses?.[0]?.email_address) return false;\r\n\r\n  try {\r\n    const response = await fetch('https://api.resend.com/emails', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${env.RESEND_API_KEY}`\r\n      },\r\n      body: JSON.stringify({\r\n        from: env.FROM_EMAIL || 'noreply@mail.carrierllm.com',\r\n        to: user.email_addresses[0].email_address,\r\n        subject: `\uD83C\uDF89 Welcome to CarrierLLM!`,\r\n        html: `\r\n          <div style=\"font-family: system-ui, -apple-system, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n            <h1 style=\"color: #3b82f6; font-size: 28px; margin-bottom: 20px;\">Welcome to CarrierLLM!</h1>\r\n            \r\n            <p style=\"color: #4b5563; font-size: 16px; line-height: 1.6;\">\r\n              Hi ${user.first_name || 'there'},<br><br>\r\n              Welcome to CarrierLLM! You now have access to our intelligent carrier recommendation platform \r\n              that helps insurance professionals find the best carriers for their clients.\r\n            </p>\r\n\r\n            <div style=\"background: #eff6ff; padding: 24px; border-radius: 12px; margin: 24px 0;\">\r\n              <h3 style=\"color: #1e40af; margin-top: 0;\">\uD83D\uDE80 Getting Started</h3>\r\n              <ol style=\"color: #4b5563; line-height: 1.8;\">\r\n                <li>Complete your profile setup</li>\r\n                <li>Configure your carrier preferences</li>\r\n                <li>Submit your first intake form</li>\r\n                <li>Get intelligent carrier recommendations</li>\r\n              </ol>\r\n            </div>\r\n\r\n            <div style=\"text-align: center; margin: 32px 0;\">\r\n              <a href=\"${env.APP_URL}/dashboard\" \r\n                 style=\"background: #3b82f6; color: white; padding: 12px 24px; border-radius: 8px; text-decoration: none; font-weight: 600;\">\r\n                Get Started \u2192\r\n              </a>\r\n            </div>\r\n\r\n            <p style=\"color: #6b7280; font-size: 14px; margin-top: 32px;\">\r\n              Need help? Contact our support team at <a href=\"mailto:info@carrierllm.com\" style=\"color: #3b82f6;\">info@carrierllm.com</a>\r\n            </p>\r\n          </div>\r\n        `\r\n      })\r\n    });\r\n\r\n    return response.ok;\r\n  } catch (error) {\r\n    console.error('Failed to send user welcome email:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Send role change notification\r\n */\r\nexport async function sendRoleChangeNotification(\r\n  membership: any,\r\n  env: EmailEnv\r\n): Promise<boolean> {\r\n  if (!env.RESEND_API_KEY || !membership.public_user_data?.user_id) return false;\r\n\r\n  try {\r\n    const response = await fetch('https://api.resend.com/emails', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${env.RESEND_API_KEY}`\r\n      },\r\n      body: JSON.stringify({\r\n        from: env.FROM_EMAIL || 'noreply@mail.carrierllm.com',\r\n        to: membership.public_user_data.identifier,\r\n        subject: `\uD83D\uDD14 Role Update - ${membership.organization.name}`,\r\n        html: `\r\n          <div style=\"font-family: system-ui, -apple-system, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n            <h1 style=\"color: #3b82f6; font-size: 28px; margin-bottom: 20px;\">Role Update</h1>\r\n            \r\n            <p style=\"color: #4b5563; font-size: 16px; line-height: 1.6;\">\r\n              Hi ${membership.public_user_data.first_name || 'there'},<br><br>\r\n              Your role in <strong>${membership.organization.name}</strong> has been updated to <strong>${membership.role_name}</strong>.\r\n            </p>\r\n\r\n            <div style=\"background: #eff6ff; padding: 24px; border-radius: 12px; margin: 24px 0;\">\r\n              <h3 style=\"color: #1e40af; margin-top: 0;\">\uD83C\uDFAF Your New Permissions</h3>\r\n              <ul style=\"color: #4b5563; line-height: 1.8;\">\r\n                ${membership.permissions?.map((perm: string) => `<li>${formatPermission(perm)}</li>`).join('')}\r\n              </ul>\r\n            </div>\r\n\r\n            <div style=\"text-align: center; margin: 32px 0;\">\r\n              <a href=\"${env.APP_URL}/dashboard\" \r\n                 style=\"background: #3b82f6; color: white; padding: 12px 24px; border-radius: 8px; text-decoration: none; font-weight: 600;\">\r\n                Access Dashboard \u2192\r\n              </a>\r\n            </div>\r\n\r\n            <p style=\"color: #6b7280; font-size: 14px; margin-top: 32px;\">\r\n              Questions about your new role? Contact your team admin or reach out to us at <a href=\"mailto:info@carrierllm.com\" style=\"color: #3b82f6;\">info@carrierllm.com</a>\r\n            </p>\r\n          </div>\r\n        `\r\n      })\r\n    });\r\n\r\n    return response.ok;\r\n  } catch (error) {\r\n    console.error('Failed to send role change notification:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Send security notification for revoked sessions\r\n */\r\nexport async function sendSecurityNotification(\r\n  session: any,\r\n  env: EmailEnv\r\n): Promise<boolean> {\r\n  if (!env.RESEND_API_KEY || !session.user_id) return false;\r\n\r\n  try {\r\n    const response = await fetch('https://api.resend.com/emails', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${env.RESEND_API_KEY}`\r\n      },\r\n      body: JSON.stringify({\r\n        from: env.FROM_EMAIL || 'noreply@mail.carrierllm.com',\r\n        to: 'security@carrierllm.com', // You'd get this from user data\r\n        subject: `\uD83D\uDD12 Security Alert - Session Revoked`,\r\n        html: `\r\n          <div style=\"font-family: system-ui, -apple-system, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n            <h1 style=\"color: #ef4444; font-size: 28px; margin-bottom: 20px;\">Security Alert</h1>\r\n            \r\n            <p style=\"color: #4b5563; font-size: 16px; line-height: 1.6;\">\r\n              A session has been revoked for security reasons.\r\n            </p>\r\n\r\n            <div style=\"background: #fef2f2; padding: 24px; border-radius: 12px; margin: 24px 0; border-left: 4px solid #ef4444;\">\r\n              <h3 style=\"color: #dc2626; margin-top: 0;\">\u26A0\uFE0F Session Details</h3>\r\n              <p style=\"color: #dc2626; margin: 4px 0;\"><strong>User ID:</strong> ${session.user_id}</p>\r\n              <p style=\"color: #dc2626; margin: 4px 0;\"><strong>Session ID:</strong> ${session.id}</p>\r\n              <p style=\"color: #dc2626; margin: 4px 0;\"><strong>Revoked:</strong> ${new Date(session.updated_at).toLocaleString()}</p>\r\n            </div>\r\n\r\n            <p style=\"color: #6b7280; font-size: 14px; margin-top: 32px;\">\r\n              This is an automated security notification from CarrierLLM.\r\n            </p>\r\n          </div>\r\n        `\r\n      })\r\n    });\r\n\r\n    return response.ok;\r\n  } catch (error) {\r\n    console.error('Failed to send security notification:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Send payment reminder email\r\n */\r\nexport async function sendPaymentReminderEmail(\r\n  item: any,\r\n  env: EmailEnv\r\n): Promise<boolean> {\r\n  if (!env.RESEND_API_KEY || !item.payer?.user_id) return false;\r\n\r\n  try {\r\n    const response = await fetch('https://api.resend.com/emails', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${env.RESEND_API_KEY}`\r\n      },\r\n      body: JSON.stringify({\r\n        from: env.FROM_EMAIL || 'noreply@mail.carrierllm.com',\r\n        to: item.payer.email,\r\n        subject: `\u26A0\uFE0F Payment Required - CarrierLLM Subscription`,\r\n        html: `\r\n          <div style=\"font-family: system-ui, -apple-system, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n            <h1 style=\"color: #f59e0b; font-size: 28px; margin-bottom: 20px;\">Payment Required</h1>\r\n            \r\n            <p style=\"color: #4b5563; font-size: 16px; line-height: 1.6;\">\r\n              Hi ${item.payer.first_name || 'there'},<br><br>\r\n              Your CarrierLLM subscription payment is past due. Please update your payment method to avoid service interruption.\r\n            </p>\r\n\r\n            <div style=\"background: #fef3c7; padding: 24px; border-radius: 12px; margin: 24px 0; border-left: 4px solid #f59e0b;\">\r\n              <h3 style=\"color: #92400e; margin-top: 0;\">\uD83D\uDCB0 Payment Details</h3>\r\n              <p style=\"color: #92400e; margin: 4px 0;\"><strong>Plan:</strong> ${item.plan.name}</p>\r\n              <p style=\"color: #92400e; margin: 4px 0;\"><strong>Amount:</strong> ${formatPrice(item.plan.amount, item.plan.currency)}</p>\r\n              <p style=\"color: #92400e; margin: 4px 0;\"><strong>Status:</strong> Past Due</p>\r\n            </div>\r\n\r\n            <div style=\"text-align: center; margin: 32px 0;\">\r\n              <a href=\"${env.APP_URL}/billing\" \r\n                 style=\"background: #3b82f6; color: white; padding: 12px 24px; border-radius: 8px; text-decoration: none; font-weight: 600;\">\r\n                Update Payment Method \u2192\r\n              </a>\r\n            </div>\r\n\r\n            <p style=\"color: #6b7280; font-size: 14px; margin-top: 32px;\">\r\n              Questions about billing? Contact us at <a href=\"mailto:info@carrierllm.com\" style=\"color: #3b82f6;\">info@carrierllm.com</a>\r\n            </p>\r\n          </div>\r\n        `\r\n      })\r\n    });\r\n\r\n    return response.ok;\r\n  } catch (error) {\r\n    console.error('Failed to send payment reminder email:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Send cancellation confirmation email\r\n */\r\nexport async function sendCancellationConfirmationEmail(\r\n  item: any,\r\n  env: EmailEnv\r\n): Promise<boolean> {\r\n  if (!env.RESEND_API_KEY || !item.payer?.user_id) return false;\r\n\r\n  try {\r\n    const response = await fetch('https://api.resend.com/emails', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${env.RESEND_API_KEY}`\r\n      },\r\n      body: JSON.stringify({\r\n        from: env.FROM_EMAIL || 'noreply@mail.carrierllm.com',\r\n        to: item.payer.email,\r\n        subject: `\uD83D\uDCDD Subscription Cancelled - CarrierLLM`,\r\n        html: `\r\n          <div style=\"font-family: system-ui, -apple-system, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n            <h1 style=\"color: #6b7280; font-size: 28px; margin-bottom: 20px;\">Subscription Cancelled</h1>\r\n            \r\n            <p style=\"color: #4b5563; font-size: 16px; line-height: 1.6;\">\r\n              Hi ${item.payer.first_name || 'there'},<br><br>\r\n              Your CarrierLLM subscription has been successfully cancelled. We're sorry to see you go!\r\n            </p>\r\n\r\n            <div style=\"background: #f9fafb; padding: 24px; border-radius: 12px; margin: 24px 0;\">\r\n              <h3 style=\"color: #1a1a1a; margin-top: 0;\">\uD83D\uDCCB Cancellation Details</h3>\r\n              <p style=\"color: #4b5563; margin: 4px 0;\"><strong>Plan:</strong> ${item.plan.name}</p>\r\n              <p style=\"color: #4b5563; margin: 4px 0;\"><strong>Cancelled:</strong> ${new Date(item.updated_at).toLocaleDateString()}</p>\r\n              <p style=\"color: #4b5563; margin: 4px 0;\"><strong>Access Until:</strong> ${new Date(item.period_end).toLocaleDateString()}</p>\r\n            </div>\r\n\r\n            <div style=\"background: #eff6ff; padding: 20px; border-radius: 8px; margin: 24px 0;\">\r\n              <h4 style=\"color: #1a1a1a; margin-top: 0;\">\uD83D\uDCBE Your Data</h4>\r\n              <p style=\"color: #4b5563; line-height: 1.6;\">\r\n                Your data will be preserved for 30 days. If you change your mind, you can reactivate your subscription \r\n                before ${new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toLocaleDateString()}.\r\n              </p>\r\n            </div>\r\n\r\n            <div style=\"text-align: center; margin: 32px 0;\">\r\n              <a href=\"${env.APP_URL}/billing\" \r\n                 style=\"background: #3b82f6; color: white; padding: 12px 24px; border-radius: 8px; text-decoration: none; font-weight: 600;\">\r\n                Reactivate Subscription \u2192\r\n              </a>\r\n            </div>\r\n\r\n            <p style=\"color: #6b7280; font-size: 14px; margin-top: 32px;\">\r\n              We'd love to hear your feedback. Contact us at <a href=\"mailto:info@carrierllm.com\" style=\"color: #3b82f6;\">info@carrierllm.com</a>\r\n            </p>\r\n          </div>\r\n        `\r\n      })\r\n    });\r\n\r\n    return response.ok;\r\n  } catch (error) {\r\n    console.error('Failed to send cancellation confirmation email:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Send payment failed email\r\n */\r\nexport async function sendPaymentFailedEmail(\r\n  payment: any,\r\n  env: EmailEnv\r\n): Promise<boolean> {\r\n  if (!env.RESEND_API_KEY || !payment.payer?.user_id) return false;\r\n\r\n  try {\r\n    const response = await fetch('https://api.resend.com/emails', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${env.RESEND_API_KEY}`\r\n      },\r\n      body: JSON.stringify({\r\n        from: env.FROM_EMAIL || 'noreply@mail.carrierllm.com',\r\n        to: payment.payer.email,\r\n        subject: `\u274C Payment Failed - CarrierLLM`,\r\n        html: `\r\n          <div style=\"font-family: system-ui, -apple-system, sans-serif; max-width: 600px; margin: 0 auto;\">\r\n            <h1 style=\"color: #ef4444; font-size: 28px; margin-bottom: 20px;\">Payment Failed</h1>\r\n            \r\n            <p style=\"color: #4b5563; font-size: 16px; line-height: 1.6;\">\r\n              Hi ${payment.payer.first_name || 'there'},<br><br>\r\n              We were unable to process your payment for your CarrierLLM subscription. Please update your payment method to continue service.\r\n            </p>\r\n\r\n            <div style=\"background: #fef2f2; padding: 24px; border-radius: 12px; margin: 24px 0; border-left: 4px solid #ef4444;\">\r\n              <h3 style=\"color: #dc2626; margin-top: 0;\">\uD83D\uDCB3 Payment Details</h3>\r\n              <p style=\"color: #dc2626; margin: 4px 0;\"><strong>Amount:</strong> ${payment.totals.grand_total.amount_formatted}</p>\r\n              <p style=\"color: #dc2626; margin: 4px 0;\"><strong>Date:</strong> ${new Date(payment.created_at).toLocaleDateString()}</p>\r\n              <p style=\"color: #dc2626; margin: 4px 0;\"><strong>Status:</strong> Failed</p>\r\n              ${payment.failed_reason ? `<p style=\"color: #dc2626; margin: 4px 0;\"><strong>Reason:</strong> ${payment.failed_reason}</p>` : ''}\r\n            </div>\r\n\r\n            <div style=\"text-align: center; margin: 32px 0;\">\r\n              <a href=\"${env.APP_URL}/billing\" \r\n                 style=\"background: #3b82f6; color: white; padding: 12px 24px; border-radius: 8px; text-decoration: none; font-weight: 600;\">\r\n                Update Payment Method \u2192\r\n              </a>\r\n            </div>\r\n\r\n            <p style=\"color: #6b7280; font-size: 14px; margin-top: 32px;\">\r\n              Need help? Contact our billing team at <a href=\"mailto:info@carrierllm.com\" style=\"color: #3b82f6;\">info@carrierllm.com</a>\r\n            </p>\r\n          </div>\r\n        `\r\n      })\r\n    });\r\n\r\n    return response.ok;\r\n  } catch (error) {\r\n    console.error('Failed to send payment failed email:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\n", "// Comprehensive worker with all necessary endpoints using native fetch API\r\n\r\nimport {\r\n  sendOrganizationWelcomeEmail,\r\n  sendTeamWelcomeEmail,\r\n  sendOrganizationInvitationEmail,\r\n  sendTrialEndingEmail,\r\n  sendPaymentConfirmationEmail,\r\n  sendUserWelcomeEmail,\r\n  sendRoleChangeNotification,\r\n  sendSecurityNotification,\r\n  sendPaymentReminderEmail,\r\n  sendCancellationConfirmationEmail,\r\n  sendPaymentFailedEmail\r\n} from './clerk-email-notifications';\r\n\r\ninterface Env {\r\n  DB: D1Database;\r\n  DOCS_BUCKET: R2Bucket;\r\n  CARRIER_INDEX: any;\r\n  AI: any;\r\n  RESEND_API_KEY?: string;\r\n  CLERK_WEBHOOK_SECRET?: string;\r\n  CRON_SECRET?: string;\r\n  STRIPE_SECRET_KEY?: string;\r\n}\r\n\r\n// Helper function to add CORS headers\r\nfunction corsHeaders() {\r\n  return {\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\r\n    'Access-Control-Allow-Headers': 'Content-Type, Authorization, X-User-Id, X-Organization-Id',\r\n    'Content-Type': 'application/json'\r\n  };\r\n}\r\n\r\n// Function to populate carriers table from existing documents\r\nasync function populateCarriersFromDocuments(env: Env) {\r\n  try {\r\n    // Check if carriers table is empty\r\n    const existingCarriers = await env.DB.prepare('SELECT COUNT(*) as count FROM carriers').first() as { count: number } | null;\r\n    if (existingCarriers && existingCarriers.count > 0) {\r\n      return; // Carriers already populated\r\n    }\r\n\r\n    console.log('Populating carriers table from existing documents...');\r\n\r\n    // List all documents in R2\r\n    const list = await env.DOCS_BUCKET.list();\r\n\r\n    // Extract unique carriers from document names\r\n    const carriers = new Map<string, any>();\r\n    \r\n    for (const obj of list.objects) {\r\n      const filename = obj.key;\r\n      const carrierInfo = extractCarrierInfo(filename);\r\n      \r\n      if (carrierInfo && !carriers.has(carrierInfo.id)) {\r\n        carriers.set(carrierInfo.id, carrierInfo);\r\n      }\r\n    }\r\n\r\n    // Insert carriers into database\r\n    for (const carrier of carriers.values()) {\r\n      try {\r\n        await env.DB.prepare(`\r\n          INSERT OR IGNORE INTO carriers (id, name, am_best, portal_url, agent_phone, preferred_tier_rank, available_states)\r\n          VALUES (?, ?, ?, ?, ?, ?, ?)\r\n        `).bind(\r\n          carrier.id,\r\n          carrier.name,\r\n          carrier.amBest,\r\n          carrier.portalUrl,\r\n          carrier.agentPhone,\r\n          carrier.preferredTierRank,\r\n          JSON.stringify(carrier.availableStates)\r\n        ).run();\r\n      } catch (error) {\r\n        console.error(`Error inserting carrier ${carrier.id}:`, error);\r\n      }\r\n    }\r\n\r\n    console.log(`Populated ${carriers.size} carriers from documents`);\r\n  } catch (error) {\r\n    console.error('Error populating carriers from documents:', error);\r\n  }\r\n}\r\n\r\n// Function to extract carrier information from filename\r\nfunction extractCarrierInfo(filename: string) {\r\n  // Remove file extension\r\n  const nameWithoutExt = filename.replace(/\\.(pdf|doc|docx|txt)$/i, '');\r\n  \r\n  // Split by common separators and clean up\r\n  const parts = nameWithoutExt.split(/[-_\\s]+/).filter(part => part.length > 0);\r\n  \r\n  if (parts.length === 0) return null;\r\n  \r\n  // Use the first part as carrier name, create ID from it\r\n  const carrierName = parts[0];\r\n  const carrierId = carrierName.toLowerCase().replace(/[^a-z0-9]/g, '');\r\n  \r\n  return {\r\n    id: carrierId,\r\n    name: carrierName,\r\n    amBest: 'A+', // Default value\r\n    portalUrl: `https://${carrierId}.com`, // Default URL\r\n    agentPhone: '1-800-CARRIER', // Default phone\r\n    preferredTierRank: 1, // Default rank\r\n    availableStates: ['All States'] // Default states\r\n  };\r\n}\r\n\r\nexport default {\r\n  async fetch(request: Request, env: Env, ctx: ExecutionContext): Promise<Response> {\r\n    const url = new URL(request.url);\r\n    const path = url.pathname;\r\n    const method = request.method;\r\n\r\n    // Handle CORS preflight\r\n    if (method === 'OPTIONS') {\r\n      return new Response(null, {\r\n        status: 204,\r\n        headers: corsHeaders()\r\n      });\r\n    }\r\n\r\n    try {\r\n      // Health check\r\n      if (path === '/api/health') {\r\n        return new Response(JSON.stringify({ \r\n          status: 'healthy', \r\n          timestamp: new Date().toISOString(),\r\n          path: path \r\n        }), {\r\n          headers: corsHeaders()\r\n        });\r\n      }\r\n\r\n      // Analytics endpoint with live data\r\n      if (path === '/api/analytics/summary' && method === 'GET') {\r\n        const userId = request.headers.get('X-User-Id');\r\n\r\n        // Get current month for date filtering\r\n        const now = new Date();\r\n        const currentMonth = now.toISOString().slice(0, 7); // YYYY-MM format\r\n        const monthStart = new Date(now.getFullYear(), now.getMonth(), 1).toISOString();\r\n\r\n        // Initialize response data with real zeros\r\n        let stats = {\r\n          totalIntakes: 0,\r\n          averageFitScore: 0,\r\n          placementRate: 0,\r\n          remainingRecommendations: 0\r\n        };\r\n\r\n        let topCarriers: any[] = [];\r\n        let trends: any[] = [];\r\n\r\n        try {\r\n          // Get total intakes - check multiple tables for compatibility\r\n          const intakesResult = await env.DB.prepare(`\r\n            SELECT COUNT(*) as count FROM (\r\n              SELECT id FROM intakes\r\n              UNION ALL\r\n              SELECT id FROM intake_submissions\r\n            )\r\n          `).first();\r\n\r\n          stats.totalIntakes = (intakesResult as { count: number })?.count || 0;\r\n\r\n          // If we have a user ID, get user-specific data\r\n          if (userId) {\r\n            // Get user's monthly usage\r\n            try {\r\n              const userUsage = await env.DB.prepare(`\r\n                SELECT COUNT(*) as used\r\n                FROM recommendations\r\n                WHERE user_id = ?\r\n                  AND created_at >= ?\r\n              `).bind(userId, monthStart).first();\r\n\r\n              const used = userUsage?.used || 0;\r\n              // Get user's actual limit from their profile\r\n              const userProfile = await env.DB.prepare(\r\n                'SELECT recommendations_limit FROM user_profiles WHERE user_id = ?'\r\n              ).bind(userId).first();\r\n              \r\n              const limit = (userProfile as { recommendations_limit: number })?.recommendations_limit || 0;\r\n              stats.remainingRecommendations = Math.max(0, limit - used);\r\n            } catch (e) {\r\n              console.log('Could not get user usage:', e);\r\n            }\r\n\r\n            // Get user's average fit score\r\n            try {\r\n              const avgScore = await env.DB.prepare(`\r\n                SELECT AVG(fit_score) as avg\r\n                FROM recommendations\r\n                WHERE user_id = ?\r\n              `).bind(userId).first();\r\n\r\n              if ((avgScore as { avg: number })?.avg) {\r\n                stats.averageFitScore = Math.round((avgScore as { avg: number }).avg);\r\n              } else {\r\n                stats.averageFitScore = 0;\r\n              }\r\n            } catch (e) {\r\n              console.log('Could not get average score:', e);\r\n            }\r\n\r\n            // Get top carriers for this user\r\n            try {\r\n              const topCarriersResult = await env.DB.prepare(`\r\n                SELECT carrier_name, COUNT(*) as count\r\n                FROM recommendations\r\n                WHERE user_id = ?\r\n                GROUP BY carrier_name\r\n                ORDER BY count DESC\r\n                LIMIT 5\r\n              `).bind(userId).all();\r\n\r\n              topCarriers = topCarriersResult.results || [];\r\n            } catch (e) {\r\n              console.log('Could not get top carriers:', e);\r\n            }\r\n\r\n            // Get trends (monthly data for the last 6 months)\r\n            try {\r\n              const trendsResult = await env.DB.prepare(`\r\n                SELECT \r\n                  strftime('%Y-%m', created_at) as month,\r\n                  COUNT(*) as count\r\n                FROM recommendations\r\n                WHERE user_id = ?\r\n                  AND created_at >= date('now', '-6 months')\r\n                GROUP BY strftime('%Y-%m', created_at)\r\n                ORDER BY month\r\n              `).bind(userId).all();\r\n\r\n              trends = trendsResult.results || [];\r\n            } catch (e) {\r\n              console.log('Could not get trends:', e);\r\n            }\r\n          }\r\n\r\n          // Get placement rate (if outcomes table exists)\r\n          try {\r\n            const placements = await env.DB.prepare(`\r\n              SELECT \r\n                COUNT(CASE WHEN status = 'approved' OR status = 'placed' THEN 1 END) as placed,\r\n                COUNT(*) as total\r\n              FROM outcomes\r\n            `).first();\r\n\r\n            if ((placements as { total: number; placed: number })?.total > 0) {\r\n              const placementData = placements as { total: number; placed: number };\r\n              stats.placementRate = Math.round((placementData.placed / placementData.total) * 100);\r\n            } else {\r\n              stats.placementRate = 0;\r\n            }\r\n          } catch (e) {\r\n            console.log('Could not get placement rate:', e);\r\n          }\r\n\r\n        } catch (dbError) {\r\n          console.error('Database error in analytics:', dbError);\r\n        }\r\n\r\n        return new Response(JSON.stringify({\r\n          stats,\r\n          topCarriers,\r\n          trends\r\n        }), {\r\n          headers: corsHeaders()\r\n        });\r\n      }\r\n\r\n      // Get carriers with user preferences\r\n      if (path === '/api/carriers/with-preferences' && method === 'GET') {\r\n        const userId = request.headers.get('X-User-Id');\r\n        if (!userId) {\r\n          return new Response(JSON.stringify({ error: 'User ID required' }), { \r\n            status: 401, \r\n            headers: corsHeaders() \r\n          });\r\n        }\r\n\r\n        // First, ensure carriers are populated from existing documents\r\n        await populateCarriersFromDocuments(env);\r\n\r\n        // Get all carriers\r\n        const carriers = await env.DB.prepare('SELECT * FROM carriers ORDER BY name').all();\r\n        \r\n        // Get user preferences\r\n        const userPreferences = await env.DB.prepare(\r\n          'SELECT carrier_id, enabled FROM user_carrier_preferences WHERE user_id = ?'\r\n        ).bind(userId).all();\r\n\r\n        // Get organization settings (if user is in an organization)\r\n        const organizationId = request.headers.get('X-Organization-Id');\r\n        let orgSettings = { results: [] as Array<{ carrier_id: string; enabled: boolean }> };\r\n        if (organizationId) {\r\n          orgSettings = await env.DB.prepare(\r\n            'SELECT carrier_id, enabled FROM organization_carrier_settings WHERE organization_id = ?'\r\n          ).bind(organizationId).all() as { results: Array<{ carrier_id: string; enabled: boolean }> };\r\n        }\r\n\r\n        const carriersWithPreferences = carriers.results.map((carrier: any) => {\r\n          const userPref = userPreferences.results.find((pref: any) => pref.carrier_id === carrier.id);\r\n          const orgSetting = orgSettings.results.find((setting: any) => setting.carrier_id === carrier.id);\r\n          \r\n          const userEnabled = userPref ? userPref.enabled : true; // Default to enabled\r\n          const organizationEnabled = orgSetting ? orgSetting.enabled : true; // Default to enabled\r\n          const isOrganizationControlled = organizationId && orgSetting && !orgSetting.enabled; // Controlled if org disabled it\r\n\r\n          return {\r\n            id: carrier.id,\r\n            name: carrier.name,\r\n            amBest: carrier.am_best,\r\n            portalUrl: carrier.portal_url,\r\n            agentPhone: carrier.agent_phone,\r\n            preferredTierRank: carrier.preferred_tier_rank,\r\n            availableStates: carrier.available_states ? JSON.parse(carrier.available_states) : [],\r\n            userEnabled,\r\n            organizationEnabled,\r\n            isOrganizationControlled\r\n          };\r\n        });\r\n\r\n        return new Response(JSON.stringify(carriersWithPreferences), { \r\n          headers: corsHeaders() \r\n        });\r\n      }\r\n\r\n      // Update user carrier preference\r\n      if (path === '/api/carriers/preferences' && method === 'POST') {\r\n        const userId = request.headers.get('X-User-Id');\r\n        if (!userId) {\r\n          return new Response(JSON.stringify({ error: 'User ID required' }), { \r\n            status: 401, \r\n            headers: corsHeaders() \r\n          });\r\n        }\r\n\r\n        const { carrierId, enabled } = await request.json() as { carrierId: string; enabled: boolean };\r\n        if (!carrierId || typeof enabled !== 'boolean') {\r\n          return new Response(JSON.stringify({ error: 'carrierId and enabled are required' }), { \r\n            status: 400, \r\n            headers: corsHeaders() \r\n          });\r\n        }\r\n\r\n        // Upsert user preference\r\n        await env.DB.prepare(`\r\n          INSERT INTO user_carrier_preferences (user_id, carrier_id, enabled, created_at, updated_at)\r\n          VALUES (?, ?, ?, datetime('now'), datetime('now'))\r\n          ON CONFLICT(user_id, carrier_id) DO UPDATE SET\r\n            enabled = excluded.enabled,\r\n            updated_at = datetime('now')\r\n        `).bind(userId, carrierId, enabled).run();\r\n\r\n        return new Response(JSON.stringify({ success: true }), { \r\n          headers: corsHeaders() \r\n        });\r\n      }\r\n\r\n      // Get user documents\r\n      if (path === '/api/documents/user' && method === 'GET') {\r\n        const userId = request.headers.get('X-User-Id');\r\n        if (!userId) {\r\n          return new Response(JSON.stringify({ error: 'User ID required' }), { \r\n            status: 401, \r\n            headers: corsHeaders() \r\n          });\r\n        }\r\n\r\n        const documents = await env.DB.prepare(`\r\n          SELECT id, filename, carrier_id, carrier_name, effective_date, file_size, file_type, \r\n                 created_at, processed\r\n          FROM user_documents \r\n          WHERE user_id = ? \r\n          ORDER BY created_at DESC\r\n        `).bind(userId).all();\r\n\r\n        return new Response(JSON.stringify(documents.results), { \r\n          headers: corsHeaders() \r\n        });\r\n      }\r\n\r\n      // Upload document\r\n      if (path === '/api/documents/upload' && method === 'POST') {\r\n        const userId = request.headers.get('X-User-Id');\r\n        if (!userId) {\r\n          return new Response(JSON.stringify({ error: 'User ID required' }), { \r\n            status: 401, \r\n            headers: corsHeaders() \r\n          });\r\n        }\r\n\r\n        const formData = await request.formData();\r\n        const file = formData.get('file') as File;\r\n        const carrierId = formData.get('carrierId') as string;\r\n        const carrierName = formData.get('carrierName') as string;\r\n        const effectiveDate = formData.get('effectiveDate') as string;\r\n\r\n        if (!file || !carrierId || !carrierName) {\r\n          return new Response(JSON.stringify({ error: 'file, carrierId, and carrierName are required' }), { \r\n            status: 400, \r\n            headers: corsHeaders() \r\n          });\r\n        }\r\n\r\n        // Validate file type\r\n        const allowedTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'text/plain'];\r\n        if (!allowedTypes.includes(file.type)) {\r\n          return new Response(JSON.stringify({ error: 'Invalid file type. Only PDF, DOC, DOCX, and TXT files are allowed.' }), { \r\n            status: 400, \r\n            headers: corsHeaders() \r\n          });\r\n        }\r\n\r\n        // Validate file size (10MB limit)\r\n        if (file.size > 10 * 1024 * 1024) {\r\n          return new Response(JSON.stringify({ error: 'File size too large. Maximum size is 10MB.' }), { \r\n            status: 400, \r\n            headers: corsHeaders() \r\n          });\r\n        }\r\n\r\n        // Generate unique filename\r\n        const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\r\n        const fileExtension = file.name.split('.').pop();\r\n        const filename = `${carrierId}_${timestamp}.${fileExtension}`;\r\n        const r2Key = `user-documents/${userId}/${filename}`;\r\n\r\n        // Upload to R2\r\n        const fileBuffer = await file.arrayBuffer();\r\n        await env.DOCS_BUCKET.put(r2Key, fileBuffer, {\r\n          httpMetadata: {\r\n            contentType: file.type,\r\n          },\r\n        });\r\n\r\n        // Store metadata in database\r\n        const result = await env.DB.prepare(`\r\n          INSERT INTO user_documents (user_id, filename, carrier_id, carrier_name, effective_date, \r\n                                    file_size, file_type, r2_key, created_at, processed)\r\n          VALUES (?, ?, ?, ?, ?, ?, ?, ?, datetime('now'), 0)\r\n        `).bind(\r\n          userId,\r\n          file.name,\r\n          carrierId,\r\n          carrierName,\r\n          effectiveDate || new Date().toISOString().split('T')[0],\r\n          file.size,\r\n          file.type,\r\n          r2Key\r\n        ).run();\r\n\r\n        return new Response(JSON.stringify({ \r\n          success: true, \r\n          documentId: result.meta.last_row_id,\r\n          message: `Successfully uploaded ${file.name} for ${carrierName}` \r\n        }), { \r\n          headers: corsHeaders() \r\n        });\r\n      }\r\n\r\n      // Get user history\r\n      if (path === '/api/user/history' && method === 'GET') {\r\n        const userId = request.headers.get('X-User-Id');\r\n        if (!userId) {\r\n          return new Response(JSON.stringify({ error: 'User ID required' }), { \r\n            status: 401, \r\n            headers: corsHeaders() \r\n          });\r\n        }\r\n\r\n        try {\r\n          // First try to get from recommendations table\r\n          let history;\r\n          try {\r\n            history = await env.DB.prepare(`\r\n              SELECT \r\n                r.id,\r\n                r.submission_id,\r\n                r.carrier_name,\r\n                r.fit_score,\r\n                r.created_at,\r\n                i.data as intake_data\r\n              FROM recommendations r\r\n              LEFT JOIN intakes i ON r.submission_id = i.id\r\n              WHERE r.user_id = ?\r\n              ORDER BY r.created_at DESC\r\n              LIMIT 50\r\n            `).bind(userId).all();\r\n          } catch (tableError) {\r\n            console.log('Recommendations table not found, trying intakes table:', tableError);\r\n            // Fallback to intakes table if recommendations doesn't exist\r\n            history = await env.DB.prepare(`\r\n              SELECT \r\n                id,\r\n                id as submission_id,\r\n                'Unknown Carrier' as carrier_name,\r\n                0 as fit_score,\r\n                created_at,\r\n                data as intake_data\r\n              FROM intakes\r\n              WHERE user_id = ?\r\n              ORDER BY created_at DESC\r\n              LIMIT 50\r\n            `).bind(userId).all();\r\n          }\r\n\r\n          const formattedHistory = history.results.map((item: any) => ({\r\n            id: item.id,\r\n            submissionId: item.submission_id,\r\n            carrierName: item.carrier_name,\r\n            fitScore: item.fit_score,\r\n            createdAt: item.created_at,\r\n            intakeData: item.intake_data ? JSON.parse(item.intake_data) : null\r\n          }));\r\n\r\n          return new Response(JSON.stringify(formattedHistory), { \r\n            headers: corsHeaders() \r\n          });\r\n        } catch (error) {\r\n          console.error('Error fetching user history:', error);\r\n          // Return empty array instead of error to prevent frontend crashes\r\n          return new Response(JSON.stringify([]), { \r\n            headers: corsHeaders() \r\n          });\r\n        }\r\n      }\r\n\r\n      // Submit intake\r\n      if (path === '/api/intake/submit' && method === 'POST') {\r\n        const userId = request.headers.get('X-User-Id');\r\n        if (!userId) {\r\n          return new Response(JSON.stringify({ error: 'User ID required' }), { \r\n            status: 401, \r\n            headers: corsHeaders() \r\n          });\r\n        }\r\n\r\n        try {\r\n          const intakeData = await request.json();\r\n          console.log('Received intake data:', JSON.stringify(intakeData, null, 2));\r\n          const submissionId = `sub_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n\r\n          // Store intake data - match actual table structure\r\n          await env.DB.prepare(`\r\n            INSERT INTO intakes (id, tenant_id, payload_json, validated, tier2_triggered, user_id, created_at)\r\n            VALUES (?, ?, ?, ?, ?, ?, datetime('now'))\r\n          `).bind(\r\n            submissionId, \r\n            request.headers.get('X-Organization-Id') || 'default', \r\n            JSON.stringify(intakeData),\r\n            intakeData.validated || false,\r\n            intakeData.tier2Triggered || false,\r\n            userId\r\n          ).run();\r\n\r\n          // For now, return empty recommendations (RAG system would be implemented here)\r\n          const recommendations: any[] = [];\r\n\r\n          // Store recommendations\r\n          for (const rec of recommendations) {\r\n            try {\r\n              await env.DB.prepare(`\r\n                INSERT INTO recommendations (user_id, submission_id, carrier_name, fit_score, \r\n                                          reasons, advisories, created_at)\r\n                VALUES (?, ?, ?, ?, ?, ?, datetime('now'))\r\n              `).bind(\r\n                userId,\r\n                submissionId,\r\n                rec.carrierName,\r\n                rec.fitScore,\r\n                JSON.stringify(rec.reasons),\r\n                JSON.stringify(rec.advisories)\r\n              ).run();\r\n            } catch (e) {\r\n              console.log('Could not store recommendation:', e);\r\n            }\r\n          }\r\n\r\n          return new Response(JSON.stringify({\r\n            submissionId,\r\n            recommendations: recommendations\r\n          }), {\r\n            headers: corsHeaders()\r\n          });\r\n        } catch (error) {\r\n          console.error('Error processing intake:', error);\r\n          console.error('Error stack:', error instanceof Error ? error.stack : 'No stack trace');\r\n          return new Response(JSON.stringify({ \r\n            error: 'Failed to process intake', \r\n            details: error instanceof Error ? error.message : String(error),\r\n            stack: error instanceof Error ? error.stack : undefined\r\n          }), { \r\n            status: 500, \r\n            headers: corsHeaders() \r\n          });\r\n        }\r\n      }\r\n\r\n      // Get recommendations\r\n      if (path.startsWith('/api/recommendations/') && method === 'GET') {\r\n        const submissionId = path.split('/')[3];\r\n        const userId = request.headers.get('X-User-Id');\r\n        \r\n        if (!userId) {\r\n          return new Response(JSON.stringify({ error: 'User ID required' }), { \r\n            status: 401, \r\n            headers: corsHeaders() \r\n          });\r\n        }\r\n\r\n        try {\r\n          const recommendations = await env.DB.prepare(`\r\n            SELECT carrier_name, fit_score, reasons, advisories, created_at\r\n            FROM recommendations\r\n            WHERE submission_id = ? AND user_id = ?\r\n            ORDER BY fit_score DESC\r\n          `).bind(submissionId, userId).all();\r\n\r\n          const formattedRecommendations = recommendations.results.map((rec: any) => ({\r\n            carrierName: rec.carrier_name,\r\n            fitScore: rec.fit_score,\r\n            reasons: rec.reasons ? JSON.parse(rec.reasons) : [],\r\n            advisories: rec.advisories ? JSON.parse(rec.advisories) : [],\r\n            createdAt: rec.created_at\r\n          }));\r\n\r\n          return new Response(JSON.stringify({\r\n            submissionId,\r\n            recommendations: formattedRecommendations\r\n          }), {\r\n            headers: corsHeaders()\r\n          });\r\n        } catch (error) {\r\n          console.error('Error fetching recommendations:', error);\r\n          return new Response(JSON.stringify({ error: 'Failed to fetch recommendations' }), { \r\n            status: 500, \r\n            headers: corsHeaders() \r\n          });\r\n        }\r\n      }\r\n\r\n      // Log outcome\r\n      if (path === '/api/outcomes' && method === 'POST') {\r\n        const userId = request.headers.get('X-User-Id');\r\n        if (!userId) {\r\n          return new Response(JSON.stringify({ error: 'User ID required' }), { \r\n            status: 401, \r\n            headers: corsHeaders() \r\n          });\r\n        }\r\n\r\n        try {\r\n          const { submissionId, carrierName, status, notes } = await request.json();\r\n          \r\n          await env.DB.prepare(`\r\n            INSERT INTO outcomes (user_id, submission_id, carrier_name, status, notes, created_at)\r\n            VALUES (?, ?, ?, ?, ?, datetime('now'))\r\n          `).bind(userId, submissionId, carrierName, status, notes || '').run();\r\n\r\n          return new Response(JSON.stringify({ success: true }), {\r\n            headers: corsHeaders()\r\n          });\r\n        } catch (error) {\r\n          console.error('Error logging outcome:', error);\r\n          return new Response(JSON.stringify({ error: 'Failed to log outcome' }), { \r\n            status: 500, \r\n            headers: corsHeaders() \r\n          });\r\n        }\r\n      }\r\n\r\n      // Clerk webhook endpoint with security and rate limiting\r\n      if (path === '/webhook' && method === 'POST') {\r\n        try {\r\n          // Verify webhook signature for security\r\n          const svixId = request.headers.get('svix-id');\r\n          const svixTimestamp = request.headers.get('svix-timestamp');\r\n          const svixSignature = request.headers.get('svix-signature');\r\n\r\n          if (!svixId || !svixTimestamp || !svixSignature) {\r\n            console.error('Missing Clerk webhook headers');\r\n            return new Response('Missing webhook headers', { \r\n              status: 400, \r\n              headers: corsHeaders() \r\n            });\r\n          }\r\n\r\n          // Basic rate limiting (simple implementation)\r\n          const clientIP = request.headers.get('cf-connecting-ip') || 'unknown';\r\n          const rateLimitKey = `webhook_rate_limit_${clientIP}`;\r\n          \r\n          // Check if we've exceeded rate limit (10 requests per minute per IP)\r\n          const rateLimitCheck = await env.DB.prepare(`\r\n            SELECT COUNT(*) as count FROM webhook_rate_limits \r\n            WHERE ip_address = ? AND created_at > datetime('now', '-1 minute')\r\n          `).bind(clientIP).first();\r\n\r\n          if ((rateLimitCheck as any)?.count > 10) {\r\n            console.error(`Rate limit exceeded for IP: ${clientIP}`);\r\n            return new Response('Rate limit exceeded', { \r\n              status: 429, \r\n              headers: corsHeaders() \r\n            });\r\n          }\r\n\r\n          // Record this request for rate limiting\r\n          await env.DB.prepare(`\r\n            INSERT INTO webhook_rate_limits (ip_address, created_at)\r\n            VALUES (?, datetime('now'))\r\n          `).bind(clientIP).run();\r\n\r\n          const body = await request.text();\r\n          const event = JSON.parse(body);\r\n\r\n          console.log(`Received Clerk webhook: ${event.type} from IP: ${clientIP}`);\r\n\r\n          // Handle organization events for team management\r\n          switch (event.type) {\r\n            // User Events\r\n            case 'user.created': {\r\n              const user = event.data;\r\n              console.log(`New user created: ${user.email_addresses?.[0]?.email_address || 'unknown'} (${user.id})`);\r\n              \r\n              // Send welcome email to new user\r\n              if (env.RESEND_API_KEY && user.email_addresses?.[0]?.email_address) {\r\n                await sendUserWelcomeEmail(user, env);\r\n              }\r\n              break;\r\n            }\r\n\r\n            case 'user.updated': {\r\n              const user = event.data;\r\n              console.log(`User updated: ${user.email_addresses?.[0]?.email_address || 'unknown'} (${user.id})`);\r\n              \r\n              // Log user changes for audit trail\r\n              await logUserChanges(user, env);\r\n              break;\r\n            }\r\n\r\n            // Organization Events\r\n            case 'organization.created': {\r\n              const org = event.data;\r\n              console.log(`New organization created: ${org.name} (${org.id})`);\r\n              \r\n              // Send welcome email to organization admin\r\n              if (env.RESEND_API_KEY && org.created_by) {\r\n                await sendOrganizationWelcomeEmail(org, env);\r\n              }\r\n              break;\r\n            }\r\n\r\n            case 'organizationMembership.created': {\r\n              const membership = event.data;\r\n              console.log(`User ${membership.public_user_data?.identifier} joined organization ${membership.organization.name}`);\r\n              \r\n              // Send welcome email to new team member\r\n              if (env.RESEND_API_KEY && membership.public_user_data?.user_id) {\r\n                await sendTeamWelcomeEmail(membership, env);\r\n              }\r\n              break;\r\n            }\r\n\r\n            case 'organizationMembership.updated': {\r\n              const membership = event.data;\r\n              console.log(`Organization membership updated: ${membership.public_user_data?.identifier} role changed to ${membership.role_name}`);\r\n              \r\n              // Send role change notification\r\n              if (env.RESEND_API_KEY && membership.public_user_data?.user_id) {\r\n                await sendRoleChangeNotification(membership, env);\r\n              }\r\n              break;\r\n            }\r\n\r\n            case 'organizationInvitation.created': {\r\n              const invitation = event.data;\r\n              console.log(`Invitation sent to ${invitation.email_address} for organization`);\r\n              \r\n              // Send invitation email\r\n              if (env.RESEND_API_KEY) {\r\n                await sendOrganizationInvitationEmail(invitation, env);\r\n              }\r\n              break;\r\n            }\r\n\r\n            // Session Events\r\n            case 'session.created': {\r\n              const session = event.data;\r\n              console.log(`Session created for user ${session.user_id}`);\r\n              \r\n              // Track user activity for engagement analytics\r\n              await trackUserSession(session, env);\r\n              break;\r\n            }\r\n\r\n            case 'session.revoked': {\r\n              const session = event.data;\r\n              console.log(`Session revoked for user ${session.user_id}`);\r\n              \r\n              // Send security notification for revoked sessions\r\n              if (env.RESEND_API_KEY) {\r\n                await sendSecurityNotification(session, env);\r\n              }\r\n              break;\r\n            }\r\n\r\n            // Subscription Events\r\n            case 'subscriptionItem.freeTrialEnding': {\r\n              const item = event.data;\r\n              console.log(`Free trial ending for subscription ${item.subscription_id}`);\r\n              \r\n              // Send trial ending notification\r\n              if (env.RESEND_API_KEY && item.payer?.user_id) {\r\n                await sendTrialEndingEmail(item, env);\r\n              }\r\n              break;\r\n            }\r\n\r\n            case 'subscriptionItem.pastDue': {\r\n              const item = event.data;\r\n              console.log(`Subscription past due for ${item.subscription_id}`);\r\n              \r\n              // Send payment reminder\r\n              if (env.RESEND_API_KEY && item.payer?.user_id) {\r\n                await sendPaymentReminderEmail(item, env);\r\n              }\r\n              break;\r\n            }\r\n\r\n            case 'subscriptionItem.canceled': {\r\n              const item = event.data;\r\n              console.log(`Subscription canceled for ${item.subscription_id}`);\r\n              \r\n              // Send cancellation confirmation\r\n              if (env.RESEND_API_KEY && item.payer?.user_id) {\r\n                await sendCancellationConfirmationEmail(item, env);\r\n              }\r\n              break;\r\n            }\r\n\r\n            // Payment Events\r\n            case 'paymentAttempt.created': {\r\n              const payment = event.data;\r\n              console.log(`Payment attempt created: ${payment.status}`);\r\n              \r\n              // Send payment confirmation\r\n              if (env.RESEND_API_KEY && payment.status === 'paid' && payment.payer?.user_id) {\r\n                await sendPaymentConfirmationEmail(payment, env);\r\n              }\r\n              break;\r\n            }\r\n\r\n            case 'paymentAttempt.updated': {\r\n              const payment = event.data;\r\n              console.log(`Payment attempt updated: ${payment.status}`);\r\n              \r\n              // Handle failed payments\r\n              if (env.RESEND_API_KEY && payment.status === 'failed' && payment.payer?.user_id) {\r\n                await sendPaymentFailedEmail(payment, env);\r\n              }\r\n              break;\r\n            }\r\n\r\n            default:\r\n              console.log(`Unhandled webhook event: ${event.type}`);\r\n          }\r\n\r\n          // Log webhook event for audit trail\r\n          await logWebhookEvent(event, env);\r\n\r\n          return new Response(JSON.stringify({ received: true }), { \r\n            headers: corsHeaders() \r\n          });\r\n        } catch (error) {\r\n          console.error('Webhook processing error:', error);\r\n          return new Response(JSON.stringify({ \r\n            error: 'Webhook processing failed',\r\n            details: error instanceof Error ? error.message : String(error)\r\n          }), { \r\n            status: 500, \r\n            headers: corsHeaders() \r\n          });\r\n        }\r\n      }\r\n\r\n      // Get user subscription/usage info\r\n      if (path.startsWith('/api/subscriptions/') && method === 'GET') {\r\n        const userId = request.headers.get('X-User-Id');\r\n        if (!userId) {\r\n          return new Response(JSON.stringify({ error: 'User ID required' }), { \r\n            status: 401, \r\n            headers: corsHeaders() \r\n          });\r\n        }\r\n\r\n        try {\r\n          // For now, return default free tier data\r\n          // In a real implementation, this would query Clerk's billing API or a subscriptions table\r\n          const subscriptionData = {\r\n            plan: { name: 'Free' },\r\n            subscription: { status: 'active' },\r\n            usage: { \r\n              current: 0, \r\n              limit: 5 \r\n            }\r\n          };\r\n\r\n          return new Response(JSON.stringify(subscriptionData), { \r\n            headers: corsHeaders() \r\n          });\r\n        } catch (error) {\r\n          console.error('Error fetching subscription data:', error);\r\n          return new Response(JSON.stringify({ \r\n            error: 'Failed to fetch subscription data',\r\n            details: error instanceof Error ? error.message : String(error)\r\n          }), { \r\n            status: 500, \r\n            headers: corsHeaders() \r\n          });\r\n        }\r\n      }\r\n\r\n      // Default 404 handler\r\n      return new Response(JSON.stringify({ \r\n        message: 'Not found',\r\n        path: path \r\n      }), {\r\n        status: 404,\r\n        headers: corsHeaders()\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('Worker error:', error);\r\n      return new Response(JSON.stringify({ \r\n        error: 'Internal server error', \r\n        details: error instanceof Error ? error.message : 'Unknown error' \r\n      }), {\r\n        status: 500,\r\n        headers: corsHeaders()\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\n// Helper functions for webhook processing\r\nasync function logUserChanges(user: any, env: Env): Promise<void> {\r\n  try {\r\n    await env.DB.prepare(`\r\n      INSERT INTO user_audit_log (user_id, action, changes, created_at)\r\n      VALUES (?, 'profile_updated', ?, datetime('now'))\r\n    `).bind(user.id, JSON.stringify(user)).run();\r\n  } catch (error) {\r\n    console.error('Failed to log user changes:', error);\r\n  }\r\n}\r\n\r\nasync function trackUserSession(session: any, env: Env): Promise<void> {\r\n  try {\r\n    await env.DB.prepare(`\r\n      INSERT INTO user_sessions (user_id, session_id, ip_address, user_agent, created_at)\r\n      VALUES (?, ?, ?, ?, datetime('now'))\r\n    `).bind(\r\n      session.user_id,\r\n      session.id,\r\n      session.latest_activity?.ip_address || 'unknown',\r\n      session.latest_activity?.browser_name || 'unknown'\r\n    ).run();\r\n  } catch (error) {\r\n    console.error('Failed to track user session:', error);\r\n  }\r\n}\r\n\r\nasync function logWebhookEvent(event: any, env: Env): Promise<void> {\r\n  try {\r\n    await env.DB.prepare(`\r\n      INSERT INTO webhook_events (event_id, event_type, user_id, payload, status, created_at)\r\n      VALUES (?, ?, ?, ?, 'processed', datetime('now'))\r\n    `).bind(\r\n      event.id,\r\n      event.type,\r\n      event.data?.id || event.data?.user_id || null,\r\n      JSON.stringify(event)\r\n    ).run();\r\n  } catch (error) {\r\n    console.error('Failed to log webhook event:', error);\r\n  }\r\n}\r\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\sites\\\\carrierllm\\\\carrierllm\\\\apps\\\\worker\\\\src\\\\comprehensive-worker.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\cinef\\\\AppData\\\\Local\\\\npm-cache\\\\_npx\\\\d77349f55c2be1c0\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\cinef\\\\AppData\\\\Local\\\\npm-cache\\\\_npx\\\\d77349f55c2be1c0\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\sites\\\\carrierllm\\\\carrierllm\\\\apps\\\\worker\\\\src\\\\comprehensive-worker.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\sites\\\\carrierllm\\\\carrierllm\\\\apps\\\\worker\\\\.wrangler\\\\tmp\\\\bundle-sMlhmP\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\cinef\\\\AppData\\\\Local\\\\npm-cache\\\\_npx\\\\d77349f55c2be1c0\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\sites\\\\carrierllm\\\\carrierllm\\\\apps\\\\worker\\\\.wrangler\\\\tmp\\\\bundle-sMlhmP\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\sites\\\\carrierllm\\\\carrierllm\\\\apps\\\\worker\\\\.wrangler\\\\tmp\\\\bundle-sMlhmP\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
