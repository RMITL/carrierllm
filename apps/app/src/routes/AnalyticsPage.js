import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useQuery } from '@tanstack/react-query';
import { Banner, Card, Badge, UsageMeter } from '@carrierllm/ui';
import { fetchAnalytics } from '../lib/api';
export const AnalyticsPage = () => {
    const { data, isLoading, isError } = useQuery({
        queryKey: ['analytics-summary'],
        queryFn: fetchAnalytics
    });
    if (isLoading) {
        return (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "animate-pulse", children: [_jsx("div", { className: "h-8 bg-gray-200 rounded w-1/4 mb-2" }), _jsx("div", { className: "h-4 bg-gray-200 rounded w-1/2" })] }), _jsx("div", { className: "grid gap-6 md:grid-cols-2 lg:grid-cols-4", children: [...Array(4)].map((_, i) => (_jsx("div", { className: "animate-pulse", children: _jsx("div", { className: "h-32 bg-gray-200 rounded" }) }, i))) })] }));
    }
    if (isError || !data) {
        return (_jsx(Banner, { variant: "warning", title: "Analytics unavailable", description: "We could not retrieve placement metrics. Confirm the Workers analytics endpoint is configured." }));
    }
    const topCarriers = data.topCarriers || [];
    const monthlyTrends = data.trends || [];
    return (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { children: [_jsx("h1", { className: "text-2xl font-bold text-gray-900", children: "Analytics Dashboard" }), _jsx("p", { className: "mt-1 text-sm text-gray-600", children: "Track your placement performance and identify trends to optimize your success rate." }), _jsxs("p", { className: "text-xs text-gray-500 mt-1", children: ["Last updated: ", new Date(data.lastUpdated).toLocaleString()] })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6", children: [_jsx(Card, { children: _jsxs("div", { className: "flex items-center", children: [_jsx("div", { className: "flex-shrink-0", children: _jsx("div", { className: "flex items-center justify-center w-8 h-8 bg-blue-100 rounded-lg", children: _jsx("span", { className: "text-blue-600 font-bold text-sm", children: "\uD83D\uDCCA" }) }) }), _jsxs("div", { className: "ml-3", children: [_jsx("p", { className: "text-sm font-medium text-gray-500", children: "Total Intakes" }), _jsx("p", { className: "text-lg font-bold text-gray-900", children: data.stats.totalIntakes })] })] }) }), _jsx(Card, { children: _jsxs("div", { className: "flex items-center", children: [_jsx("div", { className: "flex-shrink-0", children: _jsx("div", { className: "flex items-center justify-center w-8 h-8 bg-green-100 rounded-lg", children: _jsx("span", { className: "text-green-600 font-bold text-sm", children: "\uD83C\uDFAF" }) }) }), _jsxs("div", { className: "ml-3", children: [_jsx("p", { className: "text-sm font-medium text-gray-500", children: "Avg Fit Score" }), _jsxs("p", { className: "text-lg font-bold text-gray-900", children: [data.stats.averageFitScore, "%"] })] })] }) }), _jsx(Card, { children: _jsxs("div", { className: "flex items-center", children: [_jsx("div", { className: "flex-shrink-0", children: _jsx("div", { className: "flex items-center justify-center w-8 h-8 bg-purple-100 rounded-lg", children: _jsx("span", { className: "text-purple-600 font-bold text-sm", children: "\u2705" }) }) }), _jsxs("div", { className: "ml-3", children: [_jsx("p", { className: "text-sm font-medium text-gray-500", children: "Placement Rate" }), _jsxs("p", { className: "text-lg font-bold text-gray-900", children: [data.stats.placementRate, "%"] })] })] }) }), _jsx(Card, { children: _jsxs("div", { className: "flex items-center", children: [_jsx("div", { className: "flex-shrink-0", children: _jsx("div", { className: "flex items-center justify-center w-8 h-8 bg-yellow-100 rounded-lg", children: _jsx("span", { className: "text-yellow-600 font-bold text-sm", children: "\uD83D\uDD04" }) }) }), _jsxs("div", { className: "ml-3", children: [_jsx("p", { className: "text-sm font-medium text-gray-500", children: "Remaining" }), _jsx("p", { className: "text-lg font-bold text-gray-900", children: data.stats.remainingRecommendations })] })] }) })] }), _jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-2 gap-6", children: [_jsxs(Card, { children: [_jsx("h3", { className: "text-lg font-medium text-gray-900 mb-4", children: "Top Performing Carriers" }), topCarriers.length > 0 ? (_jsx("div", { className: "space-y-3", children: topCarriers.map((carrier, index) => (_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center", children: [_jsxs("span", { className: "text-sm font-medium text-gray-500 w-6", children: [index + 1, "."] }), _jsx("span", { className: "ml-2 text-sm font-medium text-gray-900", children: carrier.name })] }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsxs(Badge, { variant: carrier.successRate > 70 ? 'success' : 'secondary', children: [carrier.successRate, "% success"] }), _jsxs("span", { className: "text-xs text-gray-500", children: [carrier.count, " placements"] })] })] }, carrier.id))) })) : (_jsx("p", { className: "text-sm text-gray-500", children: "No carrier data available yet." }))] }), _jsxs(Card, { children: [_jsx("h3", { className: "text-lg font-medium text-gray-900 mb-4", children: "Monthly Trends" }), monthlyTrends.length > 0 ? (_jsx("div", { className: "space-y-3", children: monthlyTrends.map((trend) => (_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-sm font-medium text-gray-600", children: new Date(trend.month).toLocaleDateString('en-US', {
                                                month: 'short',
                                                year: 'numeric'
                                            }) }), _jsxs("div", { className: "flex items-center gap-4", children: [_jsxs("div", { className: "text-right", children: [_jsxs("p", { className: "text-sm font-medium text-gray-900", children: [trend.intakes, " intakes"] }), _jsxs("p", { className: "text-xs text-gray-500", children: [trend.conversions, " conversions"] })] }), _jsx(UsageMeter, { value: trend.conversionRate, label: "", className: "w-20" })] })] }, trend.month))) })) : (_jsx("p", { className: "text-sm text-gray-500", children: "No trend data available yet." }))] })] }), _jsx(Card, { children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-lg font-medium text-gray-900", children: "Export Analytics" }), _jsx("p", { className: "text-sm text-gray-600 mt-1", children: "Download your analytics data in CSV or PDF format" })] }), _jsxs("div", { className: "flex gap-2", children: [_jsx("button", { className: "px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50", children: "Export CSV" }), _jsx("button", { className: "px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50", children: "Export PDF" })] })] }) }), _jsxs(Card, { children: [_jsx("h3", { className: "text-lg font-medium text-gray-900 mb-4", children: "Team Performance" }), _jsxs("div", { className: "text-sm text-gray-600", children: [_jsx("p", { children: "Team-wide analytics and individual agent performance metrics will appear here." }), _jsx("p", { className: "mt-2", children: "This feature is available for Enterprise plans." })] })] })] }));
};
