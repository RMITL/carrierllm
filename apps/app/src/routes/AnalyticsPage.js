import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useQuery } from '@tanstack/react-query';
import { Banner, Card, UsageMeter } from '@carrierllm/ui';
import { fetchAnalytics } from '../lib/api';
export const AnalyticsPage = () => {
    const { data, isLoading, isError } = useQuery({
        queryKey: ['analytics-summary'],
        queryFn: fetchAnalytics
    });
    if (isLoading) {
        return (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "animate-pulse", children: [_jsx("div", { className: "h-8 bg-gray-200 rounded w-1/4 mb-2" }), _jsx("div", { className: "h-4 bg-gray-200 rounded w-1/2" })] }), _jsx("div", { className: "grid gap-6 md:grid-cols-2 lg:grid-cols-4", children: [...Array(4)].map((_, i) => (_jsx("div", { className: "animate-pulse", children: _jsx("div", { className: "h-32 bg-gray-200 rounded" }) }, i))) })] }));
    }
    if (isError || !data) {
        return (_jsx(Banner, { variant: "warning", title: "Analytics unavailable", description: "We could not retrieve placement metrics. Confirm the Workers analytics endpoint is configured." }));
    }
    const topCarriers = data.topCarriers || [];
    const monthlyTrends = data.trends || [];
    return (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { children: [_jsx("h1", { className: "text-2xl font-bold text-gray-900", children: "Analytics Dashboard" }), _jsx("p", { className: "mt-1 text-sm text-gray-600", children: "Track your placement performance and identify trends to optimize your success rate." }), _jsxs("p", { className: "text-xs text-gray-500 mt-1", children: ["Last updated: ", new Date(data.lastUpdated).toLocaleString()] })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6", children: [_jsx(Card, { children: _jsxs("div", { className: "flex items-center", children: [_jsx("div", { className: "flex-shrink-0", children: _jsx("div", { className: "flex items-center justify-center w-8 h-8 bg-blue-100 rounded-lg", children: _jsx("svg", { className: "w-5 h-5 text-blue-600", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" }) }) }) }), _jsxs("div", { className: "ml-4", children: [_jsx("p", { className: "text-sm font-medium text-gray-600", children: "Total Submissions" }), _jsx("p", { className: "text-2xl font-semibold text-gray-900", children: data.stats.totalIntakes })] })] }) }), _jsx(Card, { children: _jsxs("div", { className: "flex items-center", children: [_jsx("div", { className: "flex-shrink-0", children: _jsx("div", { className: "flex items-center justify-center w-8 h-8 bg-green-100 rounded-lg", children: _jsx("svg", { className: "w-5 h-5 text-green-600", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" }) }) }) }), _jsxs("div", { className: "ml-4", children: [_jsx("p", { className: "text-sm font-medium text-gray-600", children: "Average Fit Score" }), _jsxs("p", { className: "text-2xl font-semibold text-gray-900", children: [Math.round(data.stats.averageFitScore), "%"] })] })] }) }), _jsx(Card, { children: _jsxs("div", { className: "flex items-center", children: [_jsx("div", { className: "flex-shrink-0", children: _jsx("div", { className: "flex items-center justify-center w-8 h-8 bg-purple-100 rounded-lg", children: _jsx("svg", { className: "w-5 h-5 text-purple-600", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M13 7h8m0 0v8m0-8l-8 8-4-4-6 6" }) }) }) }), _jsxs("div", { className: "ml-4", children: [_jsx("p", { className: "text-sm font-medium text-gray-600", children: "Placement Rate" }), _jsxs("p", { className: "text-2xl font-semibold text-gray-900", children: [Math.round(data.stats.placementRate), "%"] })] })] }) }), _jsx(Card, { children: _jsxs("div", { className: "flex items-center", children: [_jsx("div", { className: "flex-shrink-0", children: _jsx("div", { className: "flex items-center justify-center w-8 h-8 bg-orange-100 rounded-lg", children: _jsx("svg", { className: "w-5 h-5 text-orange-600", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1" }) }) }) }), _jsxs("div", { className: "ml-4", children: [_jsx("p", { className: "text-sm font-medium text-gray-600", children: "Remaining Recommendations" }), _jsx("p", { className: "text-2xl font-semibold text-gray-900", children: data.stats.remainingRecommendations })] })] }) })] }), _jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-2 gap-6", children: [_jsxs(Card, { children: [_jsx("h3", { className: "text-lg font-medium text-gray-900 mb-4", children: "Top Performing Carriers" }), _jsx("div", { className: "space-y-4", children: topCarriers.map((carrier, index) => (_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx("div", { className: "flex-shrink-0", children: _jsx("div", { className: "w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center", children: _jsx("span", { className: "text-sm font-medium text-gray-600", children: index + 1 }) }) }), _jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-gray-900", children: carrier.carrierName }), _jsxs("p", { className: "text-xs text-gray-500", children: [carrier.recommendations, " recommendations"] })] })] }), _jsxs("div", { className: "text-right", children: [_jsxs("p", { className: "text-sm font-medium text-gray-900", children: [Math.round((carrier.placements / carrier.recommendations) * 100), "%"] }), _jsx("p", { className: "text-xs text-gray-500", children: "placement rate" })] })] }, carrier.carrierName))) })] }), _jsxs(Card, { children: [_jsx("h3", { className: "text-lg font-medium text-gray-900 mb-4", children: "Monthly Trends" }), _jsx("div", { className: "space-y-4", children: monthlyTrends.map((month) => (_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm font-medium text-gray-900", children: month.month }), _jsxs("p", { className: "text-xs text-gray-500", children: [month.recommendations, " recommendations"] })] }), _jsxs("div", { className: "flex items-center space-x-4", children: [_jsx("div", { className: "flex-1 max-w-20", children: _jsx(UsageMeter, { value: (month.placements / month.recommendations) * 100, label: "Placement rate" }) }), _jsx("div", { className: "text-right", children: _jsxs("p", { className: "text-sm font-medium text-gray-900", children: [Math.round((month.placements / month.recommendations) * 100), "%"] }) })] })] }, month.month))) })] })] }), _jsxs(Card, { children: [_jsx("h3", { className: "text-lg font-medium text-gray-900 mb-4", children: "Performance Insights" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4", children: [_jsxs("div", { className: "p-4 bg-green-50 rounded-lg", children: [_jsx("h4", { className: "text-sm font-medium text-green-800 mb-2", children: "Subscription Status" }), _jsxs("p", { className: "text-sm text-green-600", children: [data.user.subscriptionTier, " plan (", data.user.subscriptionStatus, ")"] })] }), _jsxs("div", { className: "p-4 bg-blue-50 rounded-lg", children: [_jsx("h4", { className: "text-sm font-medium text-blue-800 mb-2", children: "Usage" }), _jsxs("p", { className: "text-sm text-blue-600", children: [data.user.recommendationsUsed, " / ", data.user.recommendationsLimit, " recommendations used"] })] }), topCarriers.length > 0 && (_jsxs("div", { className: "p-4 bg-amber-50 rounded-lg", children: [_jsx("h4", { className: "text-sm font-medium text-amber-800 mb-2", children: "Top Carrier" }), _jsxs("p", { className: "text-sm text-amber-600", children: [topCarriers[0].carrierName, " shows the highest placement rate (", Math.round((topCarriers[0].placements / topCarriers[0].recommendations) * 100), "%)"] })] }))] })] })] }));
};
